<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 多数据源配置start -->
	<!-- <bean id="dataSourceOne" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">  
        <property name="driverClass" value="${dbOne.jdbc.driverClass}" />  
        <property name="jdbcUrl" value="${dbOne.jdbc.url}" />  
        <property name="user" value="${dbOne.jdbc.user}" />  
        <property name="password" value="${dbOne.jdbc.password}" />  
        <property name="initialPoolSize" value="${dbOne.jdbc.initialPoolSize}" />  
        <property name="minPoolSize" value="${dbOne.jdbc.minPoolSize}" />  
        <property name="maxPoolSize" value="${dbOne.jdbc.maxPoolSize}" />  
    </bean>  
  
    <bean id="dataSourceTwo" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${dbTwo.jdbc.driverClass}" />  
        <property name="jdbcUrl" value="${dbTwo.jdbc.url}" />  
        <property name="user" value="${dbTwo.jdbc.user}" />  
        <property name="password" value="${dbTwo.jdbc.password}" />  
        <property name="initialPoolSize" value="${dbTwo.jdbc.initialPoolSize}" />  
        <property name="minPoolSize" value="${dbTwo.jdbc.minPoolSize}" />  
        <property name="maxPoolSize" value="${dbTwo.jdbc.maxPoolSize}" />  
    </bean>  
  
    <bean id="dynamicDataSource" class="com.core.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="dataSourceOne" key="dataSourceOne"></entry>  
                <entry value-ref="dataSourceTwo" key="dataSourceTwo"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSourceOne"/>  
    </bean>   -->
    <!-- 多数据源配置end -->
    
    <!-- 配置druid监控spring jdbc -->
	<!-- <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.cn.ssm.service..*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config> -->
	
	<!-- 配置数据源 -->  
   <!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName" value="${jdbc.driverClassName}"/>  
        <property name="url" value="${jdbc.url}"/>  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="initialSize" value="${jdbc.initialSize}"></property>  
        <property name="maxActive" value="${jdbc.maxActive}"/>  
        <property name="maxIdle" value="${jdbc.maxIdle}"/>  
        <property name="maxWait" value="${jdbc.maxWait}"/>  
        <property name="validationQuery" value="${jdbc.validationQuery}"></property>  
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"></property>  
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"></property>  
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"></property>  
        <property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"></property>  
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"></property>  
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>  
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>  
    </bean>   -->
    
     <!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="200" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小(是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭)
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
		-->

		<property name="validationQuery" value="${validationQuery}" />
		
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟(连接租用时间超时会自动关闭此连接) -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean> 
	
	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.mall.service.impl.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
</beans>